name: Build and Release Fyne App

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    env:
      GOPRIVATE: github.com/crazytypewriter/sing-lib

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update SSH client
        run: sudo apt-get update && sudo apt-get install --reinstall -y openssh-client


      - name: Set up Go
        uses: actions/setup-go@v4
        with:
            go-version: '>=1.24.2'
            check-latest: false
            token: ${{ github.token }}
            cache: true

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Check SSH key format
        run: head -n 5 ~/.ssh/id_rsa

      - name: Check SSH key permissions
        run: ls -al ~/.ssh/id_rsa

      - name: Check known_hosts
        run: cat ~/.ssh/known_hosts

      - name: Configure Git for SSH
        run: |
          git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: Test SSH connection (optional)
        run: ssh -v -o IdentitiesOnly=yes -i ~/.ssh/id_rsa -o PreferredAuthentications=publickey -o PubkeyAcceptedKeyTypes=rsa git@github.com
        continue-on-error: true

      - name: Configure Git for SSH
        run: git config --global url."git@github.com:".insteadOf "https://github.com/"


      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Vendor dependencies
        run: |
          go mod tidy
          go mod vendor

      - name: Install fyne-cross
        run: |
          go install github.com/fyne-io/fyne-cross@latest

      - name: Build Windows App
        run: |
          fyne-cross windows -arch=amd64 -app-id=io.rd15.tool

      - name: Install GitHub CLI
        run: |
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create GitHub Release
        run: |
          gh release create ${{ github.ref_name }} \
          /home/runner/work/rd15tool/rd15tool/fyne-cross/dist/windows-amd64/rd15tool.exe.zip \
            --title "${{ github.ref_name }}" \
            --notes "This release was automatically generated by GitHub Actions."
